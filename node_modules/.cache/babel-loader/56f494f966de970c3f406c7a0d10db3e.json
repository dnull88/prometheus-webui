{"ast":null,"code":"import _classCallCheck from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/app/src/pages/graph/TimeInput.tsx\";\nimport $ from 'jquery';\nimport React, { Component } from 'react';\nimport { Button, InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport moment from 'moment-timezone';\nimport 'tempusdominus-core';\nimport 'tempusdominus-bootstrap-4';\nimport '../../../node_modules/tempusdominus-bootstrap-4/build/css/tempusdominus-bootstrap-4.min.css';\nimport { dom, library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faCalendarCheck, faArrowUp, faArrowDown, faTimes } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faChevronLeft, faChevronRight, faCalendarCheck, faArrowUp, faArrowDown, faTimes); // Sadly needed to also replace <i> within the date picker, since it's not a React component.\n\ndom.watch();\n\nvar TimeInput = /*#__PURE__*/function (_Component) {\n  _inherits(TimeInput, _Component);\n\n  var _super = _createSuper(TimeInput);\n\n  function TimeInput() {\n    var _this;\n\n    _classCallCheck(this, TimeInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.timeInputRef = React.createRef();\n    _this.$time = null;\n\n    _this.getBaseTime = function () {\n      return _this.props.time || moment().valueOf();\n    };\n\n    _this.calcShiftRange = function () {\n      return _this.props.range / 2;\n    };\n\n    _this.increaseTime = function () {\n      var time = _this.getBaseTime() + _this.calcShiftRange();\n\n      _this.props.onChangeTime(time);\n    };\n\n    _this.decreaseTime = function () {\n      var time = _this.getBaseTime() - _this.calcShiftRange();\n\n      _this.props.onChangeTime(time);\n    };\n\n    _this.clearTime = function () {\n      _this.props.onChangeTime(null);\n    };\n\n    _this.timezone = function () {\n      return _this.props.useLocalTime ? moment.tz.guess() : 'UTC';\n    };\n\n    return _this;\n  }\n\n  _createClass(TimeInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.$time = $(this.timeInputRef.current);\n      this.$time.datetimepicker({\n        icons: {\n          today: 'fas fa-calendar-check'\n        },\n        buttons: {\n          //showClear: true,\n          showClose: true,\n          showToday: true\n        },\n        sideBySide: true,\n        format: 'YYYY-MM-DD HH:mm:ss',\n        locale: 'en',\n        timeZone: this.timezone(),\n        defaultDate: this.props.time\n      });\n      this.$time.on('change.datetimepicker', function (e) {\n        if (e.date) {\n          _this2.props.onChangeTime(e.date.valueOf());\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.$time.datetimepicker('destroy');\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          time = _this$props.time,\n          useLocalTime = _this$props.useLocalTime;\n\n      if (prevProps.time !== time) {\n        this.$time.datetimepicker('date', time ? moment(time) : null);\n      }\n\n      if (prevProps.useLocalTime !== useLocalTime) {\n        this.$time.datetimepicker('options', {\n          timeZone: this.timezone(),\n          defaultDate: null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"time-input\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        title: \"Decrease time\",\n        onClick: this.decreaseTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faChevronLeft,\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        placeholder: this.props.placeholder,\n        innerRef: this.timeInputRef,\n        onFocus: function onFocus() {\n          return _this3.$time.datetimepicker('show');\n        },\n        onBlur: function onBlur() {\n          return _this3.$time.datetimepicker('hide');\n        },\n        onKeyDown: function onKeyDown(e) {\n          return ['Escape', 'Enter'].includes(e.key) && _this3.$time.datetimepicker('hide');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }), this.props.time && /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"clear-time-btn\",\n        title: \"Clear time\",\n        onClick: this.clearTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        title: \"Increase time\",\n        onClick: this.increaseTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faChevronRight,\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return TimeInput;\n}(Component);\n\nexport default TimeInput;","map":{"version":3,"sources":["/app/src/pages/graph/TimeInput.tsx"],"names":["$","React","Component","Button","InputGroup","InputGroupAddon","Input","moment","dom","library","FontAwesomeIcon","faChevronLeft","faChevronRight","faCalendarCheck","faArrowUp","faArrowDown","faTimes","add","watch","TimeInput","timeInputRef","createRef","$time","getBaseTime","props","time","valueOf","calcShiftRange","range","increaseTime","onChangeTime","decreaseTime","clearTime","timezone","useLocalTime","tz","guess","current","datetimepicker","icons","today","buttons","showClose","showToday","sideBySide","format","locale","timeZone","defaultDate","on","e","date","prevProps","placeholder","includes","key"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport React, { Component } from 'react';\nimport { Button, InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nimport moment from 'moment-timezone';\n\nimport 'tempusdominus-core';\nimport 'tempusdominus-bootstrap-4';\nimport '../../../node_modules/tempusdominus-bootstrap-4/build/css/tempusdominus-bootstrap-4.min.css';\n\nimport { dom, library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faCalendarCheck,\n  faArrowUp,\n  faArrowDown,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faChevronLeft, faChevronRight, faCalendarCheck, faArrowUp, faArrowDown, faTimes);\n// Sadly needed to also replace <i> within the date picker, since it's not a React component.\ndom.watch();\n\ninterface TimeInputProps {\n  time: number | null; // Timestamp in milliseconds.\n  useLocalTime: boolean;\n  range: number; // Range in seconds.\n  placeholder: string;\n  onChangeTime: (time: number | null) => void;\n}\n\nclass TimeInput extends Component<TimeInputProps> {\n  private timeInputRef = React.createRef<HTMLInputElement>();\n  private $time: any = null;\n\n  getBaseTime = (): number => {\n    return this.props.time || moment().valueOf();\n  };\n\n  calcShiftRange = () => this.props.range / 2;\n\n  increaseTime = (): void => {\n    const time = this.getBaseTime() + this.calcShiftRange();\n    this.props.onChangeTime(time);\n  };\n\n  decreaseTime = (): void => {\n    const time = this.getBaseTime() - this.calcShiftRange();\n    this.props.onChangeTime(time);\n  };\n\n  clearTime = (): void => {\n    this.props.onChangeTime(null);\n  };\n\n  timezone = (): string => {\n    return this.props.useLocalTime ? moment.tz.guess() : 'UTC';\n  };\n\n  componentDidMount() {\n    this.$time = $(this.timeInputRef.current!);\n\n    this.$time.datetimepicker({\n      icons: {\n        today: 'fas fa-calendar-check',\n      },\n      buttons: {\n        //showClear: true,\n        showClose: true,\n        showToday: true,\n      },\n      sideBySide: true,\n      format: 'YYYY-MM-DD HH:mm:ss',\n      locale: 'en',\n      timeZone: this.timezone(),\n      defaultDate: this.props.time,\n    });\n\n    this.$time.on('change.datetimepicker', (e: any) => {\n      if (e.date) {\n        this.props.onChangeTime(e.date.valueOf());\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.$time.datetimepicker('destroy');\n  }\n\n  componentDidUpdate(prevProps: TimeInputProps) {\n    const { time, useLocalTime } = this.props;\n    if (prevProps.time !== time) {\n      this.$time.datetimepicker('date', time ? moment(time) : null);\n    }\n    if (prevProps.useLocalTime !== useLocalTime) {\n      this.$time.datetimepicker('options', { timeZone: this.timezone(), defaultDate: null });\n    }\n  }\n\n  render() {\n    return (\n      <InputGroup className=\"time-input\" size=\"sm\">\n        <InputGroupAddon addonType=\"prepend\">\n          <Button title=\"Decrease time\" onClick={this.decreaseTime}>\n            <FontAwesomeIcon icon={faChevronLeft} fixedWidth />\n          </Button>\n        </InputGroupAddon>\n\n        <Input\n          placeholder={this.props.placeholder}\n          innerRef={this.timeInputRef}\n          onFocus={() => this.$time.datetimepicker('show')}\n          onBlur={() => this.$time.datetimepicker('hide')}\n          onKeyDown={e => ['Escape', 'Enter'].includes(e.key) && this.$time.datetimepicker('hide')}\n        />\n\n        {/* CAUTION: While the datetimepicker also has an option to show a 'clear' button,\n            that functionality is broken, so we create an external solution instead. */}\n        {this.props.time && (\n          <InputGroupAddon addonType=\"append\">\n            <Button className=\"clear-time-btn\" title=\"Clear time\" onClick={this.clearTime}>\n              <FontAwesomeIcon icon={faTimes} fixedWidth />\n            </Button>\n          </InputGroupAddon>\n        )}\n\n        <InputGroupAddon addonType=\"append\">\n          <Button title=\"Increase time\" onClick={this.increaseTime}>\n            <FontAwesomeIcon icon={faChevronRight} fixedWidth />\n          </Button>\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n}\n\nexport default TimeInput;\n"]},"metadata":{},"sourceType":"module"}