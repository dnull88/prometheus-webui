{"ast":null,"code":"/**\n *\n * THIS FILE WAS COPIED INTO PROMETHEUS FROM GRAFANA'S VENDORED FORK OF FLOT\n * (LIVING AT https://github.com/grafana/grafana/tree/master/public/vendor/flot),\n * WHICH CONTAINS FIXES FOR DISPLAYING NULL VALUES IN STACKED GRAPHS. THE ORIGINAL\n * FLOT CODE WAS LICENSED UNDER THE MIT LICENSE AS STATED BELOW. ADDITIONAL\n * CHANGES HAVE BEEN CONTRIBUTED TO THE GRAFANA FORK UNDER AN APACHE 2 LICENSE, SEE\n * https://github.com/grafana/grafana/blob/master/license.\n *\n */\n\n/* eslint-disable prefer-spread */\n\n/* eslint-disable no-loop-func */\n\n/* eslint-disable @typescript-eslint/no-this-alias */\n\n/* eslint-disable no-redeclare */\n\n/* eslint-disable no-useless-escape */\n\n/* eslint-disable prefer-const */\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable no-var */\n\n/* Flot plugin for showing crosshairs when the mouse hovers over the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\n\tcrosshair: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\"\n\t\tcolor: color\n\t\tlineWidth: number\n\t}\n\nSet the mode to one of \"x\", \"y\" or \"xy\". The \"x\" mode enables a vertical\ncrosshair that lets you trace the values on the x axis, \"y\" enables a\nhorizontal crosshair and \"xy\" enables them both. \"color\" is the color of the\ncrosshair (default is \"rgba(170, 0, 0, 0.80)\"), \"lineWidth\" is the width of\nthe drawn lines (default is 1).\n\nThe plugin also adds four public methods:\n\n  - setCrosshair( pos )\n\n    Set the position of the crosshair. Note that this is cleared if the user\n    moves the mouse. \"pos\" is in coordinates of the plot and should be on the\n    form { x: xpos, y: ypos } (you can use x2/x3/... if you're using multiple\n    axes), which is coincidentally the same format as what you get from a\n    \"plothover\" event. If \"pos\" is null, the crosshair is cleared.\n\n  - clearCrosshair()\n\n    Clear the crosshair.\n\n  - lockCrosshair(pos)\n\n    Cause the crosshair to lock to the current location, no longer updating if\n    the user moves the mouse. Optionally supply a position (passed on to\n    setCrosshair()) to move it to.\n\n    Example usage:\n\n\tvar myFlot = $.plot( $(\"#graph\"), ..., { crosshair: { mode: \"x\" } } };\n\t$(\"#graph\").bind( \"plothover\", function ( evt, position, item ) {\n\t\tif ( item ) {\n\t\t\t// Lock the crosshair to the data point being hovered\n\t\t\tmyFlot.lockCrosshair({\n\t\t\t\tx: item.datapoint[ 0 ],\n\t\t\t\ty: item.datapoint[ 1 ]\n\t\t\t});\n\t\t} else {\n\t\t\t// Return normal crosshair operation\n\t\t\tmyFlot.unlockCrosshair();\n\t\t}\n\t});\n\n  - unlockCrosshair()\n\n    Free the crosshair to move again after locking it.\n*/\n(function ($) {\n  var options = {\n    crosshair: {\n      mode: null,\n      // one of null, \"x\", \"y\" or \"xy\",\n      color: 'rgba(170, 0, 0, 0.80)',\n      lineWidth: 1\n    }\n  };\n\n  function init(plot) {\n    // position of crosshair in pixels\n    var crosshair = {\n      x: -1,\n      y: -1,\n      locked: false\n    };\n\n    plot.setCrosshair = function setCrosshair(pos) {\n      if (!pos) crosshair.x = -1;else {\n        var o = plot.p2c(pos);\n        crosshair.x = Math.max(0, Math.min(o.left, plot.width()));\n        crosshair.y = Math.max(0, Math.min(o.top, plot.height()));\n      }\n      plot.triggerRedrawOverlay();\n    };\n\n    plot.clearCrosshair = plot.setCrosshair; // passes null for pos\n\n    plot.lockCrosshair = function lockCrosshair(pos) {\n      if (pos) plot.setCrosshair(pos);\n      crosshair.locked = true;\n    };\n\n    plot.unlockCrosshair = function unlockCrosshair() {\n      crosshair.locked = false;\n    };\n\n    function onMouseOut() {\n      if (crosshair.locked) return;\n\n      if (crosshair.x != -1) {\n        crosshair.x = -1;\n        plot.triggerRedrawOverlay();\n      }\n    }\n\n    function onMouseMove(e) {\n      if (crosshair.locked) return;\n\n      if (plot.getSelection && plot.getSelection()) {\n        crosshair.x = -1; // hide the crosshair while selecting\n\n        return;\n      }\n\n      var offset = plot.offset();\n      crosshair.x = Math.max(0, Math.min(e.pageX - offset.left, plot.width()));\n      crosshair.y = Math.max(0, Math.min(e.pageY - offset.top, plot.height()));\n      plot.triggerRedrawOverlay();\n    }\n\n    plot.hooks.bindEvents.push(function (plot, eventHolder) {\n      if (!plot.getOptions().crosshair.mode) return;\n      eventHolder.mouseout(onMouseOut);\n      eventHolder.mousemove(onMouseMove);\n    });\n    plot.hooks.drawOverlay.push(function (plot, ctx) {\n      var c = plot.getOptions().crosshair;\n      if (!c.mode) return;\n      var plotOffset = plot.getPlotOffset();\n      ctx.save();\n      ctx.translate(plotOffset.left, plotOffset.top);\n\n      if (crosshair.x != -1) {\n        var adj = plot.getOptions().crosshair.lineWidth % 2 ? 0.5 : 0;\n        ctx.strokeStyle = c.color;\n        ctx.lineWidth = c.lineWidth;\n        ctx.lineJoin = 'round';\n        ctx.beginPath();\n\n        if (c.mode.indexOf('x') != -1) {\n          var drawX = Math.floor(crosshair.x) + adj;\n          ctx.moveTo(drawX, 0);\n          ctx.lineTo(drawX, plot.height());\n        }\n\n        if (c.mode.indexOf('y') != -1) {\n          var drawY = Math.floor(crosshair.y) + adj;\n          ctx.moveTo(0, drawY);\n          ctx.lineTo(plot.width(), drawY);\n        }\n\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    });\n    plot.hooks.shutdown.push(function (plot, eventHolder) {\n      eventHolder.unbind('mouseout', onMouseOut);\n      eventHolder.unbind('mousemove', onMouseMove);\n    });\n  }\n\n  $.plot.plugins.push({\n    init: init,\n    options: options,\n    name: 'crosshair',\n    version: '1.0'\n  });\n})(window.jQuery);","map":{"version":3,"sources":["/app/src/vendor/flot/jquery.flot.crosshair.js"],"names":["$","options","crosshair","mode","color","lineWidth","init","plot","x","y","locked","setCrosshair","pos","o","p2c","Math","max","min","left","width","top","height","triggerRedrawOverlay","clearCrosshair","lockCrosshair","unlockCrosshair","onMouseOut","onMouseMove","e","getSelection","offset","pageX","pageY","hooks","bindEvents","push","eventHolder","getOptions","mouseout","mousemove","drawOverlay","ctx","c","plotOffset","getPlotOffset","save","translate","adj","strokeStyle","lineJoin","beginPath","indexOf","drawX","floor","moveTo","lineTo","drawY","stroke","restore","shutdown","unbind","plugins","name","version","window","jQuery"],"mappings":"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","sourcesContent":["/**\n *\n * THIS FILE WAS COPIED INTO PROMETHEUS FROM GRAFANA'S VENDORED FORK OF FLOT\n * (LIVING AT https://github.com/grafana/grafana/tree/master/public/vendor/flot),\n * WHICH CONTAINS FIXES FOR DISPLAYING NULL VALUES IN STACKED GRAPHS. THE ORIGINAL\n * FLOT CODE WAS LICENSED UNDER THE MIT LICENSE AS STATED BELOW. ADDITIONAL\n * CHANGES HAVE BEEN CONTRIBUTED TO THE GRAFANA FORK UNDER AN APACHE 2 LICENSE, SEE\n * https://github.com/grafana/grafana/blob/master/license.\n *\n */\n\n/* eslint-disable prefer-spread */\n/* eslint-disable no-loop-func */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-useless-escape */\n/* eslint-disable prefer-const */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-var */\n/* Flot plugin for showing crosshairs when the mouse hovers over the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\n\tcrosshair: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\"\n\t\tcolor: color\n\t\tlineWidth: number\n\t}\n\nSet the mode to one of \"x\", \"y\" or \"xy\". The \"x\" mode enables a vertical\ncrosshair that lets you trace the values on the x axis, \"y\" enables a\nhorizontal crosshair and \"xy\" enables them both. \"color\" is the color of the\ncrosshair (default is \"rgba(170, 0, 0, 0.80)\"), \"lineWidth\" is the width of\nthe drawn lines (default is 1).\n\nThe plugin also adds four public methods:\n\n  - setCrosshair( pos )\n\n    Set the position of the crosshair. Note that this is cleared if the user\n    moves the mouse. \"pos\" is in coordinates of the plot and should be on the\n    form { x: xpos, y: ypos } (you can use x2/x3/... if you're using multiple\n    axes), which is coincidentally the same format as what you get from a\n    \"plothover\" event. If \"pos\" is null, the crosshair is cleared.\n\n  - clearCrosshair()\n\n    Clear the crosshair.\n\n  - lockCrosshair(pos)\n\n    Cause the crosshair to lock to the current location, no longer updating if\n    the user moves the mouse. Optionally supply a position (passed on to\n    setCrosshair()) to move it to.\n\n    Example usage:\n\n\tvar myFlot = $.plot( $(\"#graph\"), ..., { crosshair: { mode: \"x\" } } };\n\t$(\"#graph\").bind( \"plothover\", function ( evt, position, item ) {\n\t\tif ( item ) {\n\t\t\t// Lock the crosshair to the data point being hovered\n\t\t\tmyFlot.lockCrosshair({\n\t\t\t\tx: item.datapoint[ 0 ],\n\t\t\t\ty: item.datapoint[ 1 ]\n\t\t\t});\n\t\t} else {\n\t\t\t// Return normal crosshair operation\n\t\t\tmyFlot.unlockCrosshair();\n\t\t}\n\t});\n\n  - unlockCrosshair()\n\n    Free the crosshair to move again after locking it.\n*/\n\n(function($) {\n  const options = {\n    crosshair: {\n      mode: null, // one of null, \"x\", \"y\" or \"xy\",\n      color: 'rgba(170, 0, 0, 0.80)',\n      lineWidth: 1,\n    },\n  };\n\n  function init(plot) {\n    // position of crosshair in pixels\n    const crosshair = { x: -1, y: -1, locked: false };\n\n    plot.setCrosshair = function setCrosshair(pos) {\n      if (!pos) crosshair.x = -1;\n      else {\n        const o = plot.p2c(pos);\n        crosshair.x = Math.max(0, Math.min(o.left, plot.width()));\n        crosshair.y = Math.max(0, Math.min(o.top, plot.height()));\n      }\n\n      plot.triggerRedrawOverlay();\n    };\n\n    plot.clearCrosshair = plot.setCrosshair; // passes null for pos\n\n    plot.lockCrosshair = function lockCrosshair(pos) {\n      if (pos) plot.setCrosshair(pos);\n      crosshair.locked = true;\n    };\n\n    plot.unlockCrosshair = function unlockCrosshair() {\n      crosshair.locked = false;\n    };\n\n    function onMouseOut() {\n      if (crosshair.locked) return;\n\n      if (crosshair.x != -1) {\n        crosshair.x = -1;\n        plot.triggerRedrawOverlay();\n      }\n    }\n\n    function onMouseMove(e) {\n      if (crosshair.locked) return;\n\n      if (plot.getSelection && plot.getSelection()) {\n        crosshair.x = -1; // hide the crosshair while selecting\n        return;\n      }\n\n      const offset = plot.offset();\n      crosshair.x = Math.max(0, Math.min(e.pageX - offset.left, plot.width()));\n      crosshair.y = Math.max(0, Math.min(e.pageY - offset.top, plot.height()));\n      plot.triggerRedrawOverlay();\n    }\n\n    plot.hooks.bindEvents.push(function(plot, eventHolder) {\n      if (!plot.getOptions().crosshair.mode) return;\n\n      eventHolder.mouseout(onMouseOut);\n      eventHolder.mousemove(onMouseMove);\n    });\n\n    plot.hooks.drawOverlay.push(function(plot, ctx) {\n      const c = plot.getOptions().crosshair;\n      if (!c.mode) return;\n\n      const plotOffset = plot.getPlotOffset();\n\n      ctx.save();\n      ctx.translate(plotOffset.left, plotOffset.top);\n\n      if (crosshair.x != -1) {\n        const adj = plot.getOptions().crosshair.lineWidth % 2 ? 0.5 : 0;\n\n        ctx.strokeStyle = c.color;\n        ctx.lineWidth = c.lineWidth;\n        ctx.lineJoin = 'round';\n\n        ctx.beginPath();\n        if (c.mode.indexOf('x') != -1) {\n          const drawX = Math.floor(crosshair.x) + adj;\n          ctx.moveTo(drawX, 0);\n          ctx.lineTo(drawX, plot.height());\n        }\n        if (c.mode.indexOf('y') != -1) {\n          const drawY = Math.floor(crosshair.y) + adj;\n          ctx.moveTo(0, drawY);\n          ctx.lineTo(plot.width(), drawY);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    });\n\n    plot.hooks.shutdown.push(function(plot, eventHolder) {\n      eventHolder.unbind('mouseout', onMouseOut);\n      eventHolder.unbind('mousemove', onMouseMove);\n    });\n  }\n\n  $.plot.plugins.push({\n    init: init,\n    options: options,\n    name: 'crosshair',\n    version: '1.0',\n  });\n})(window.jQuery);\n"]},"metadata":{},"sourceType":"module"}