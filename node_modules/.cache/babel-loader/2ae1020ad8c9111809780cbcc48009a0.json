{"ast":null,"code":"import _slicedToArray from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{getColor}from'./target';import{Collapse,Table,Badge}from'reactstrap';import styles from'./ScrapePoolPanel.module.css';import EndpointLink from'./EndpointLink';import TargetLabels from'./TargetLabels';import{now}from'moment';import{useLocalStorage}from'../../hooks/useLocalStorage';import{ToggleMoreLess}from'../../components/ToggleMoreLess';import{formatRelative,humanizeDuration}from'../../utils';export var columns=['Endpoint','State','Labels','Last Scrape','Scrape Duration','Error'];var ScrapePoolPanel=function ScrapePoolPanel(_ref){var scrapePool=_ref.scrapePool,targetGroup=_ref.targetGroup;var _useLocalStorage=useLocalStorage(\"targets-\".concat(scrapePool,\"-expanded\"),{expanded:true}),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),expanded=_useLocalStorage2[0].expanded,setOptions=_useLocalStorage2[1];var modifier=targetGroup.upCount<targetGroup.targets.length?'danger':'normal';var id=\"pool-\".concat(scrapePool);var anchorProps={href:\"#\".concat(id),id};return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},/*#__PURE__*/React.createElement(ToggleMoreLess,{event:function event(){return setOptions({expanded:!expanded});},showMore:expanded},/*#__PURE__*/React.createElement(\"a\",Object.assign({className:styles[modifier]},anchorProps),\"\".concat(scrapePool,\" (\").concat(targetGroup.upCount,\"/\").concat(targetGroup.targets.length,\" up)\"))),/*#__PURE__*/React.createElement(Collapse,{isOpen:expanded},/*#__PURE__*/React.createElement(Table,{className:styles.table,size:\"sm\",bordered:true,hover:true,striped:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{key:\"header\"},columns.map(function(column){return/*#__PURE__*/React.createElement(\"th\",{key:column},column);}))),/*#__PURE__*/React.createElement(\"tbody\",null,targetGroup.targets.map(function(target,idx){var discoveredLabels=target.discoveredLabels,labels=target.labels,scrapePool=target.scrapePool,scrapeUrl=target.scrapeUrl,globalUrl=target.globalUrl,lastError=target.lastError,lastScrape=target.lastScrape,lastScrapeDuration=target.lastScrapeDuration,health=target.health;var color=getColor(health);return/*#__PURE__*/React.createElement(\"tr\",{key:scrapeUrl},/*#__PURE__*/React.createElement(\"td\",{className:styles.endpoint},/*#__PURE__*/React.createElement(EndpointLink,{endpoint:scrapeUrl,globalUrl:globalUrl})),/*#__PURE__*/React.createElement(\"td\",{className:styles.state},/*#__PURE__*/React.createElement(Badge,{color:color},health.toUpperCase())),/*#__PURE__*/React.createElement(\"td\",{className:styles.labels},/*#__PURE__*/React.createElement(TargetLabels,{discoveredLabels:discoveredLabels,labels:labels,scrapePool:scrapePool,idx:idx})),/*#__PURE__*/React.createElement(\"td\",{className:styles['last-scrape']},formatRelative(lastScrape,now())),/*#__PURE__*/React.createElement(\"td\",{className:styles['scrape-duration']},humanizeDuration(lastScrapeDuration*1000)),/*#__PURE__*/React.createElement(\"td\",{className:styles.errors},lastError?/*#__PURE__*/React.createElement(Badge,{color:color},lastError):null));})))));};export default ScrapePoolPanel;","map":{"version":3,"sources":["/app/src/pages/targets/ScrapePoolPanel.tsx"],"names":["React","getColor","Collapse","Table","Badge","styles","EndpointLink","TargetLabels","now","useLocalStorage","ToggleMoreLess","formatRelative","humanizeDuration","columns","ScrapePoolPanel","scrapePool","targetGroup","expanded","setOptions","modifier","upCount","targets","length","id","anchorProps","href","container","table","map","column","target","idx","discoveredLabels","labels","scrapeUrl","globalUrl","lastError","lastScrape","lastScrapeDuration","health","color","endpoint","state","toUpperCase","errors"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport { ScrapePool, getColor } from './target';\nimport { Collapse, Table, Badge } from 'reactstrap';\nimport styles from './ScrapePoolPanel.module.css';\nimport { Target } from './target';\nimport EndpointLink from './EndpointLink';\nimport TargetLabels from './TargetLabels';\nimport { now } from 'moment';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { ToggleMoreLess } from '../../components/ToggleMoreLess';\nimport { formatRelative, humanizeDuration } from '../../utils';\n\ninterface PanelProps {\n  scrapePool: string;\n  targetGroup: ScrapePool;\n}\n\nexport const columns = ['Endpoint', 'State', 'Labels', 'Last Scrape', 'Scrape Duration', 'Error'];\n\nconst ScrapePoolPanel: FC<PanelProps> = ({ scrapePool, targetGroup }) => {\n  const [{ expanded }, setOptions] = useLocalStorage(`targets-${scrapePool}-expanded`, { expanded: true });\n  const modifier = targetGroup.upCount < targetGroup.targets.length ? 'danger' : 'normal';\n  const id = `pool-${scrapePool}`;\n  const anchorProps = {\n    href: `#${id}`,\n    id,\n  };\n\n  return (\n    <div className={styles.container}>\n      <ToggleMoreLess event={(): void => setOptions({ expanded: !expanded })} showMore={expanded}>\n        <a className={styles[modifier]} {...anchorProps}>\n          {`${scrapePool} (${targetGroup.upCount}/${targetGroup.targets.length} up)`}\n        </a>\n      </ToggleMoreLess>\n      <Collapse isOpen={expanded}>\n        <Table className={styles.table} size=\"sm\" bordered hover striped>\n          <thead>\n            <tr key=\"header\">\n              {columns.map(column => (\n                <th key={column}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {targetGroup.targets.map((target: Target, idx: number) => {\n              const {\n                discoveredLabels,\n                labels,\n                scrapePool,\n                scrapeUrl,\n                globalUrl,\n                lastError,\n                lastScrape,\n                lastScrapeDuration,\n                health,\n              } = target;\n              const color = getColor(health);\n\n              return (\n                <tr key={scrapeUrl}>\n                  <td className={styles.endpoint}>\n                    <EndpointLink endpoint={scrapeUrl} globalUrl={globalUrl} />\n                  </td>\n                  <td className={styles.state}>\n                    <Badge color={color}>{health.toUpperCase()}</Badge>\n                  </td>\n                  <td className={styles.labels}>\n                    <TargetLabels discoveredLabels={discoveredLabels} labels={labels} scrapePool={scrapePool} idx={idx} />\n                  </td>\n                  <td className={styles['last-scrape']}>{formatRelative(lastScrape, now())}</td>\n                  <td className={styles['scrape-duration']}>{humanizeDuration(lastScrapeDuration * 1000)}</td>\n                  <td className={styles.errors}>{lastError ? <Badge color={color}>{lastError}</Badge> : null}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default ScrapePoolPanel;\n"]},"metadata":{},"sourceType":"module"}