{"ast":null,"code":"import _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/pages/alerts/CollapsibleAlertPanel.tsx\";\n\nimport React, { useState, Fragment } from 'react';\nimport { Link } from '@reach/router';\nimport { Alert, Collapse, Table, Badge } from 'reactstrap';\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createExpressionLink, parsePrometheusFloat, formatDuration } from '../../utils/index';\nvar alertColors = {\n  firing: 'danger',\n  pending: 'warning',\n  inactive: 'success'\n};\n\nvar CollapsibleAlertPanel = function CollapsibleAlertPanel(_ref) {\n  var rule = _ref.rule,\n      showAnnotations = _ref.showAnnotations;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      toggle = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    fade: false,\n    onClick: function onClick() {\n      return toggle(!open);\n    },\n    color: alertColors[rule.state],\n    style: {\n      cursor: 'pointer'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: open ? faChevronDown : faChevronRight,\n    fixedWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, rule.name), \" (\", \"\".concat(rule.alerts.length, \" active\"), \")\"), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: open,\n    className: \"mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      background: '#f5f5f5',\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(Link, {\n    to: createExpressionLink(\"ALERTS{alertname=\\\"\".concat(rule.name, \"\\\"}\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, rule.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"expr: \", /*#__PURE__*/React.createElement(Link, {\n    to: createExpressionLink(rule.query),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, rule.query)), rule.duration > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"for: \", formatDuration(rule.duration * 1000))), rule.labels && Object.keys(rule.labels).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"labels:\"), Object.entries(rule.labels).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-4\",\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, key, \": \", value);\n  })), rule.annotations && Object.keys(rule.annotations).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"annotations:\"), Object.entries(rule.annotations).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        key = _ref5[0],\n        value = _ref5[1];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-4\",\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, key, \": \", value);\n  })))), rule.alerts.length > 0 && /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Labels\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Active Since\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, rule.alerts.map(function (alert, i) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        verticalAlign: 'middle'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, Object.entries(alert.labels).map(function (_ref6, j) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          k = _ref7[0],\n          v = _ref7[1];\n\n      return /*#__PURE__*/React.createElement(Badge, {\n        key: j,\n        color: \"primary\",\n        className: \"mr-1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, k, \"=\", v);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      color: alertColors[alert.state] + ' text-uppercase',\n      className: \"px-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }\n    }, alert.state))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, alert.activeAt), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, parsePrometheusFloat(alert.value))), showAnnotations && /*#__PURE__*/React.createElement(Annotations, {\n      annotations: alert.annotations,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }));\n  })))));\n};\n\nexport var Annotations = function Annotations(_ref8) {\n  var annotations = _ref8.annotations;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Annotations\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, Object.entries(annotations).map(function (_ref9, i) {\n    var _ref10 = _slicedToArray(_ref9, 2),\n        k = _ref10[0],\n        v = _ref10[1];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, k), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, v));\n  }))));\n};\nexport default CollapsibleAlertPanel;","map":{"version":3,"sources":["/app/src/pages/alerts/CollapsibleAlertPanel.tsx"],"names":["React","useState","Fragment","Link","Alert","Collapse","Table","Badge","faChevronDown","faChevronRight","FontAwesomeIcon","createExpressionLink","parsePrometheusFloat","formatDuration","alertColors","firing","pending","inactive","CollapsibleAlertPanel","rule","showAnnotations","open","toggle","state","cursor","name","alerts","length","background","padding","query","duration","labels","Object","keys","entries","map","key","value","annotations","alert","i","verticalAlign","j","k","v","activeAt","Annotations"],"mappings":"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","sourcesContent":["import React, { FC, useState, Fragment } from 'react';\nimport { Link } from '@reach/router';\nimport { Alert, Collapse, Table, Badge } from 'reactstrap';\nimport { RuleStatus } from './AlertContents';\nimport { Rule } from '../../types/types';\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createExpressionLink, parsePrometheusFloat, formatDuration } from '../../utils/index';\n\ninterface CollapsibleAlertPanelProps {\n  rule: Rule;\n  showAnnotations: boolean;\n}\n\nconst alertColors: RuleStatus<string> = {\n  firing: 'danger',\n  pending: 'warning',\n  inactive: 'success',\n};\n\nconst CollapsibleAlertPanel: FC<CollapsibleAlertPanelProps> = ({ rule, showAnnotations }) => {\n  const [open, toggle] = useState(false);\n\n  return (\n    <>\n      <Alert fade={false} onClick={() => toggle(!open)} color={alertColors[rule.state]} style={{ cursor: 'pointer' }}>\n        <FontAwesomeIcon icon={open ? faChevronDown : faChevronRight} fixedWidth />\n        <strong>{rule.name}</strong> ({`${rule.alerts.length} active`})\n      </Alert>\n      <Collapse isOpen={open} className=\"mb-2\">\n        <pre style={{ background: '#f5f5f5', padding: 15 }}>\n          <code>\n            <div>\n              name: <Link to={createExpressionLink(`ALERTS{alertname=\"${rule.name}\"}`)}>{rule.name}</Link>\n            </div>\n            <div>\n              expr: <Link to={createExpressionLink(rule.query)}>{rule.query}</Link>\n            </div>\n            {rule.duration > 0 && (\n              <div>\n                <div>for: {formatDuration(rule.duration * 1000)}</div>\n              </div>\n            )}\n            {rule.labels && Object.keys(rule.labels).length > 0 && (\n              <div>\n                <div>labels:</div>\n                {Object.entries(rule.labels).map(([key, value]) => (\n                  <div className=\"ml-4\" key={key}>\n                    {key}: {value}\n                  </div>\n                ))}\n              </div>\n            )}\n            {rule.annotations && Object.keys(rule.annotations).length > 0 && (\n              <div>\n                <div>annotations:</div>\n                {Object.entries(rule.annotations).map(([key, value]) => (\n                  <div className=\"ml-4\" key={key}>\n                    {key}: {value}\n                  </div>\n                ))}\n              </div>\n            )}\n          </code>\n        </pre>\n        {rule.alerts.length > 0 && (\n          <Table bordered size=\"sm\">\n            <thead>\n              <tr>\n                <th>Labels</th>\n                <th>State</th>\n                <th>Active Since</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rule.alerts.map((alert, i) => {\n                return (\n                  <Fragment key={i}>\n                    <tr>\n                      <td style={{ verticalAlign: 'middle' }}>\n                        {Object.entries(alert.labels).map(([k, v], j) => {\n                          return (\n                            <Badge key={j} color=\"primary\" className=\"mr-1\">\n                              {k}={v}\n                            </Badge>\n                          );\n                        })}\n                      </td>\n                      <td>\n                        <h5 className=\"m-0\">\n                          <Badge color={alertColors[alert.state] + ' text-uppercase'} className=\"px-3\">\n                            {alert.state}\n                          </Badge>\n                        </h5>\n                      </td>\n                      <td>{alert.activeAt}</td>\n                      <td>{parsePrometheusFloat(alert.value)}</td>\n                    </tr>\n                    {showAnnotations && <Annotations annotations={alert.annotations} />}\n                  </Fragment>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\ninterface AnnotationsProps {\n  annotations: Record<string, string>;\n}\n\nexport const Annotations: FC<AnnotationsProps> = ({ annotations }) => {\n  return (\n    <Fragment>\n      <tr>\n        <td colSpan={4}>\n          <h5 className=\"font-weight-bold\">Annotations</h5>\n        </td>\n      </tr>\n      <tr>\n        <td colSpan={4}>\n          {Object.entries(annotations).map(([k, v], i) => {\n            return (\n              <div key={i}>\n                <strong>{k}</strong>\n                <div>{v}</div>\n              </div>\n            );\n          })}\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nexport default CollapsibleAlertPanel;\n"]},"metadata":{},"sourceType":"module"}