{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/src/pages/alerts/Alerts.tsx\";\n\nimport React from 'react';\nimport { useFetch } from '../../hooks/useFetch';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport AlertsContent from './AlertContents';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\nvar AlertsWithStatusIndicator = withStatusIndicator(AlertsContent);\n\nvar Alerts = function Alerts() {\n  var pathPrefix = usePathPrefix();\n\n  var _useFetch = useFetch(\"\".concat(pathPrefix, \"/\").concat(API_PATH, \"/rules?type=alert\")),\n      response = _useFetch.response,\n      error = _useFetch.error,\n      isLoading = _useFetch.isLoading;\n\n  var ruleStatsCount = {\n    inactive: 0,\n    pending: 0,\n    firing: 0\n  };\n\n  if (response.data && response.data.groups) {\n    response.data.groups.forEach(function (el) {\n      return el.rules.forEach(function (r) {\n        return ruleStatsCount[r.state]++;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(AlertsWithStatusIndicator, Object.assign({}, response.data, {\n    statsCount: ruleStatsCount,\n    error: error,\n    isLoading: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Alerts;","map":{"version":3,"sources":["/app/src/pages/alerts/Alerts.tsx"],"names":["React","useFetch","withStatusIndicator","AlertsContent","usePathPrefix","API_PATH","AlertsWithStatusIndicator","Alerts","pathPrefix","response","error","isLoading","ruleStatsCount","inactive","pending","firing","data","groups","forEach","el","rules","r","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,OAAOC,aAAP,MAAuD,iBAAvD;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,IAAMC,yBAAyB,GAAGJ,mBAAmB,CAACC,aAAD,CAArD;;AAEA,IAAMI,MAA+B,GAAG,SAAlCA,MAAkC,GAAM;AAC5C,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AAD4C,kBAELH,QAAQ,WAAiBO,UAAjB,cAA+BH,QAA/B,uBAFH;AAAA,MAEpCI,QAFoC,aAEpCA,QAFoC;AAAA,MAE1BC,KAF0B,aAE1BA,KAF0B;AAAA,MAEnBC,SAFmB,aAEnBA,SAFmB;;AAI5C,MAAMC,cAAkC,GAAG;AACzCC,IAAAA,QAAQ,EAAE,CAD+B;AAEzCC,IAAAA,OAAO,EAAE,CAFgC;AAGzCC,IAAAA,MAAM,EAAE;AAHiC,GAA3C;;AAMA,MAAIN,QAAQ,CAACO,IAAT,IAAiBP,QAAQ,CAACO,IAAT,CAAcC,MAAnC,EAA2C;AACzCR,IAAAA,QAAQ,CAACO,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,KAAH,CAASF,OAAT,CAAiB,UAAAG,CAAC;AAAA,eAAIT,cAAc,CAACS,CAAC,CAACC,KAAH,CAAd,EAAJ;AAAA,OAAlB,CAAJ;AAAA,KAA/B;AACD;;AAED,sBAAO,oBAAC,yBAAD,oBAA+Bb,QAAQ,CAACO,IAAxC;AAA8C,IAAA,UAAU,EAAEJ,cAA1D;AAA0E,IAAA,KAAK,EAAEF,KAAjF;AAAwF,IAAA,SAAS,EAAEC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAfD;;AAiBA,eAAeJ,MAAf","sourcesContent":["import React, { FC } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { useFetch } from '../../hooks/useFetch';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport AlertsContent, { RuleStatus, AlertsProps } from './AlertContents';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\n\nconst AlertsWithStatusIndicator = withStatusIndicator(AlertsContent);\n\nconst Alerts: FC<RouteComponentProps> = () => {\n  const pathPrefix = usePathPrefix();\n  const { response, error, isLoading } = useFetch<AlertsProps>(`${pathPrefix}/${API_PATH}/rules?type=alert`);\n\n  const ruleStatsCount: RuleStatus<number> = {\n    inactive: 0,\n    pending: 0,\n    firing: 0,\n  };\n\n  if (response.data && response.data.groups) {\n    response.data.groups.forEach(el => el.rules.forEach(r => ruleStatsCount[r.state]++));\n  }\n\n  return <AlertsWithStatusIndicator {...response.data} statsCount={ruleStatsCount} error={error} isLoading={isLoading} />;\n};\n\nexport default Alerts;\n"]},"metadata":{},"sourceType":"module"}