{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/src/pages/rules/Rules.tsx\";\n\nimport React from 'react';\nimport { useFetch } from '../../hooks/useFetch';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport { RulesContent } from './RulesContent';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\nvar RulesWithStatusIndicator = withStatusIndicator(RulesContent);\n\nvar Rules = function Rules() {\n  var pathPrefix = usePathPrefix();\n\n  var _useFetch = useFetch(\"\".concat(pathPrefix, \"/\").concat(API_PATH, \"/rules\")),\n      response = _useFetch.response,\n      error = _useFetch.error,\n      isLoading = _useFetch.isLoading;\n\n  return /*#__PURE__*/React.createElement(RulesWithStatusIndicator, {\n    response: response,\n    error: error,\n    isLoading: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Rules;","map":{"version":3,"sources":["/app/src/pages/rules/Rules.tsx"],"names":["React","useFetch","withStatusIndicator","RulesContent","usePathPrefix","API_PATH","RulesWithStatusIndicator","Rules","pathPrefix","response","error","isLoading"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAAmBC,YAAnB,QAAuC,gBAAvC;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,IAAMC,wBAAwB,GAAGJ,mBAAmB,CAACC,YAAD,CAApD;;AAEA,IAAMI,KAA8B,GAAG,SAAjCA,KAAiC,GAAM;AAC3C,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AAD2C,kBAEJH,QAAQ,WAAcO,UAAd,cAA4BH,QAA5B,YAFJ;AAAA,MAEnCI,QAFmC,aAEnCA,QAFmC;AAAA,MAEzBC,KAFyB,aAEzBA,KAFyB;AAAA,MAElBC,SAFkB,aAElBA,SAFkB;;AAI3C,sBAAO,oBAAC,wBAAD;AAA0B,IAAA,QAAQ,EAAEF,QAApC;AAA8C,IAAA,KAAK,EAAEC,KAArD;AAA4D,IAAA,SAAS,EAAEC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CALD;;AAOA,eAAeJ,KAAf","sourcesContent":["import React, { FC } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { useFetch } from '../../hooks/useFetch';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport { RulesMap, RulesContent } from './RulesContent';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\n\nconst RulesWithStatusIndicator = withStatusIndicator(RulesContent);\n\nconst Rules: FC<RouteComponentProps> = () => {\n  const pathPrefix = usePathPrefix();\n  const { response, error, isLoading } = useFetch<RulesMap>(`${pathPrefix}/${API_PATH}/rules`);\n\n  return <RulesWithStatusIndicator response={response} error={error} isLoading={isLoading} />;\n};\n\nexport default Rules;\n"]},"metadata":{},"sourceType":"module"}