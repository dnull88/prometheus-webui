{"ast":null,"code":"import _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/pages/targets/ScrapePoolPanel.tsx\";\n\nimport React from 'react';\nimport { getColor } from './target';\nimport { Collapse, Table, Badge } from 'reactstrap';\nimport styles from './ScrapePoolPanel.module.css';\nimport EndpointLink from './EndpointLink';\nimport TargetLabels from './TargetLabels';\nimport { now } from 'moment';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { ToggleMoreLess } from '../../components/ToggleMoreLess';\nimport { formatRelative, humanizeDuration } from '../../utils';\nexport var columns = ['Endpoint', 'State', 'Labels', 'Last Scrape', 'Scrape Duration', 'Error'];\n\nvar ScrapePoolPanel = function ScrapePoolPanel(_ref) {\n  var scrapePool = _ref.scrapePool,\n      targetGroup = _ref.targetGroup;\n\n  var _useLocalStorage = useLocalStorage(\"targets-\".concat(scrapePool, \"-expanded\"), {\n    expanded: true\n  }),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      expanded = _useLocalStorage2[0].expanded,\n      setOptions = _useLocalStorage2[1];\n\n  var modifier = targetGroup.upCount < targetGroup.targets.length ? 'danger' : 'normal';\n  var id = \"pool-\".concat(scrapePool);\n  var anchorProps = {\n    href: \"#\".concat(id),\n    id\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToggleMoreLess, {\n    event: function event() {\n      return setOptions({\n        expanded: !expanded\n      });\n    },\n    showMore: expanded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    className: styles[modifier]\n  }, anchorProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), \"\".concat(scrapePool, \" (\").concat(targetGroup.upCount, \"/\").concat(targetGroup.targets.length, \" up)\"))), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: expanded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: styles.table,\n    size: \"sm\",\n    bordered: true,\n    hover: true,\n    striped: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, columns.map(function (column) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: column,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, column);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, targetGroup.targets.map(function (target, idx) {\n    var discoveredLabels = target.discoveredLabels,\n        labels = target.labels,\n        scrapePool = target.scrapePool,\n        scrapeUrl = target.scrapeUrl,\n        globalUrl = target.globalUrl,\n        lastError = target.lastError,\n        lastScrape = target.lastScrape,\n        lastScrapeDuration = target.lastScrapeDuration,\n        health = target.health;\n    var color = getColor(health);\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: scrapeUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: styles.endpoint,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(EndpointLink, {\n      endpoint: scrapeUrl,\n      globalUrl: globalUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: styles.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, health.toUpperCase())), /*#__PURE__*/React.createElement(\"td\", {\n      className: styles.labels,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TargetLabels, {\n      discoveredLabels: discoveredLabels,\n      labels: labels,\n      scrapePool: scrapePool,\n      idx: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: styles['last-scrape'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, formatRelative(lastScrape, now())), /*#__PURE__*/React.createElement(\"td\", {\n      className: styles['scrape-duration'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, humanizeDuration(lastScrapeDuration * 1000)), /*#__PURE__*/React.createElement(\"td\", {\n      className: styles.errors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, lastError ? /*#__PURE__*/React.createElement(Badge, {\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 62\n      }\n    }, lastError) : null));\n  })))));\n};\n\nexport default ScrapePoolPanel;","map":{"version":3,"sources":["/app/src/pages/targets/ScrapePoolPanel.tsx"],"names":["React","getColor","Collapse","Table","Badge","styles","EndpointLink","TargetLabels","now","useLocalStorage","ToggleMoreLess","formatRelative","humanizeDuration","columns","ScrapePoolPanel","scrapePool","targetGroup","expanded","setOptions","modifier","upCount","targets","length","id","anchorProps","href","container","table","map","column","target","idx","discoveredLabels","labels","scrapeUrl","globalUrl","lastError","lastScrape","lastScrapeDuration","health","color","endpoint","state","toUpperCase","errors"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport { ScrapePool, getColor } from './target';\nimport { Collapse, Table, Badge } from 'reactstrap';\nimport styles from './ScrapePoolPanel.module.css';\nimport { Target } from './target';\nimport EndpointLink from './EndpointLink';\nimport TargetLabels from './TargetLabels';\nimport { now } from 'moment';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { ToggleMoreLess } from '../../components/ToggleMoreLess';\nimport { formatRelative, humanizeDuration } from '../../utils';\n\ninterface PanelProps {\n  scrapePool: string;\n  targetGroup: ScrapePool;\n}\n\nexport const columns = ['Endpoint', 'State', 'Labels', 'Last Scrape', 'Scrape Duration', 'Error'];\n\nconst ScrapePoolPanel: FC<PanelProps> = ({ scrapePool, targetGroup }) => {\n  const [{ expanded }, setOptions] = useLocalStorage(`targets-${scrapePool}-expanded`, { expanded: true });\n  const modifier = targetGroup.upCount < targetGroup.targets.length ? 'danger' : 'normal';\n  const id = `pool-${scrapePool}`;\n  const anchorProps = {\n    href: `#${id}`,\n    id,\n  };\n\n  return (\n    <div className={styles.container}>\n      <ToggleMoreLess event={(): void => setOptions({ expanded: !expanded })} showMore={expanded}>\n        <a className={styles[modifier]} {...anchorProps}>\n          {`${scrapePool} (${targetGroup.upCount}/${targetGroup.targets.length} up)`}\n        </a>\n      </ToggleMoreLess>\n      <Collapse isOpen={expanded}>\n        <Table className={styles.table} size=\"sm\" bordered hover striped>\n          <thead>\n            <tr key=\"header\">\n              {columns.map(column => (\n                <th key={column}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {targetGroup.targets.map((target: Target, idx: number) => {\n              const {\n                discoveredLabels,\n                labels,\n                scrapePool,\n                scrapeUrl,\n                globalUrl,\n                lastError,\n                lastScrape,\n                lastScrapeDuration,\n                health,\n              } = target;\n              const color = getColor(health);\n\n              return (\n                <tr key={scrapeUrl}>\n                  <td className={styles.endpoint}>\n                    <EndpointLink endpoint={scrapeUrl} globalUrl={globalUrl} />\n                  </td>\n                  <td className={styles.state}>\n                    <Badge color={color}>{health.toUpperCase()}</Badge>\n                  </td>\n                  <td className={styles.labels}>\n                    <TargetLabels discoveredLabels={discoveredLabels} labels={labels} scrapePool={scrapePool} idx={idx} />\n                  </td>\n                  <td className={styles['last-scrape']}>{formatRelative(lastScrape, now())}</td>\n                  <td className={styles['scrape-duration']}>{humanizeDuration(lastScrapeDuration * 1000)}</td>\n                  <td className={styles.errors}>{lastError ? <Badge color={color}>{lastError}</Badge> : null}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default ScrapePoolPanel;\n"]},"metadata":{},"sourceType":"module"}