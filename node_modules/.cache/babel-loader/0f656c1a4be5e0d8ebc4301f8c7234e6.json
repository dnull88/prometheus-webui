{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/src/pages/graph/GraphTabContent.tsx\";\n\nimport React from 'react';\nimport { Alert } from 'reactstrap';\nimport Graph from './Graph';\nimport { isPresent } from '../../utils';\nexport var GraphTabContent = function GraphTabContent(_ref) {\n  var data = _ref.data,\n      stacked = _ref.stacked,\n      useLocalTime = _ref.useLocalTime,\n      lastQueryParams = _ref.lastQueryParams;\n\n  if (!isPresent(data)) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: \"light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, \"No data queried yet\");\n  }\n\n  if (data.result.length === 0) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Empty query result\");\n  }\n\n  if (data.resultType !== 'matrix') {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, \"Query result is of wrong type '\", data.resultType, \"', should be 'matrix' (range vector).\");\n  }\n\n  return /*#__PURE__*/React.createElement(Graph, {\n    data: data,\n    stacked: stacked,\n    useLocalTime: useLocalTime,\n    queryParams: lastQueryParams,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/app/src/pages/graph/GraphTabContent.tsx"],"names":["React","Alert","Graph","isPresent","GraphTabContent","data","stacked","useLocalTime","lastQueryParams","result","length","resultType"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AASA,OAAO,IAAMC,eAAyC,GAAG,SAA5CA,eAA4C,OAAsD;AAAA,MAAnDC,IAAmD,QAAnDA,IAAmD;AAAA,MAA7CC,OAA6C,QAA7CA,OAA6C;AAAA,MAApCC,YAAoC,QAApCA,YAAoC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;;AAC7G,MAAI,CAACL,SAAS,CAACE,IAAD,CAAd,EAAsB;AACpB,wBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AACD,MAAIA,IAAI,CAACI,MAAL,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,wBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AACD,MAAIL,IAAI,CAACM,UAAL,KAAoB,QAAxB,EAAkC;AAChC,wBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAsDN,IAAI,CAACM,UAA3D,0CADF;AAGD;;AACD,sBAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,IAAb;AAAmB,IAAA,OAAO,EAAEC,OAA5B;AAAqC,IAAA,YAAY,EAAEC,YAAnD;AAAiE,IAAA,WAAW,EAAEC,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAbM","sourcesContent":["import React, { FC } from 'react';\nimport { Alert } from 'reactstrap';\nimport Graph from './Graph';\nimport { QueryParams } from '../../types/types';\nimport { isPresent } from '../../utils';\n\ninterface GraphTabContentProps {\n  data: any;\n  stacked: boolean;\n  useLocalTime: boolean;\n  lastQueryParams: QueryParams | null;\n}\n\nexport const GraphTabContent: FC<GraphTabContentProps> = ({ data, stacked, useLocalTime, lastQueryParams }) => {\n  if (!isPresent(data)) {\n    return <Alert color=\"light\">No data queried yet</Alert>;\n  }\n  if (data.result.length === 0) {\n    return <Alert color=\"secondary\">Empty query result</Alert>;\n  }\n  if (data.resultType !== 'matrix') {\n    return (\n      <Alert color=\"danger\">Query result is of wrong type '{data.resultType}', should be 'matrix' (range vector).</Alert>\n    );\n  }\n  return <Graph data={data} stacked={stacked} useLocalTime={useLocalTime} queryParams={lastQueryParams} />;\n};\n"]},"metadata":{},"sourceType":"module"}