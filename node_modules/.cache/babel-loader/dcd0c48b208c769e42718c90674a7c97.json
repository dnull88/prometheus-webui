{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/src/App.tsx\";\n\nimport React from 'react';\nimport Navigation from './Navbar';\nimport { Container } from 'reactstrap';\nimport './App.css';\nimport { Router, Redirect } from '@reach/router';\nimport { Alerts, Config, Flags, Rules, ServiceDiscovery, Status, Targets, TSDBStatus, PanelList } from './pages';\nimport { PathPrefixContext } from './contexts/PathPrefixContext';\n\nvar App = function App(_ref) {\n  var consolesLink = _ref.consolesLink;\n  // This dynamically/generically determines the pathPrefix by stripping the first known\n  // endpoint suffix from the window location path. It works out of the box for both direct\n  // hosting and reverse proxy deployments with no additional configurations required.\n  var basePath = window.location.pathname;\n  var paths = ['/graph', '/alerts', '/status', '/tsdb-status', '/flags', '/config', '/rules', '/targets', '/service-discovery'];\n\n  if (basePath.endsWith('/')) {\n    basePath = basePath.slice(0, -1);\n  }\n\n  if (basePath.length > 1) {\n    for (var i = 0; i < paths.length; i++) {\n      if (basePath.endsWith(paths[i])) {\n        basePath = basePath.slice(0, basePath.length - paths[i].length);\n        break;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(PathPrefixContext.Provider, {\n    value: basePath,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    consolesLink: consolesLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    style: {\n      paddingTop: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    basepath: \"\".concat(basePath),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    from: \"/\",\n    to: \"graph\",\n    noThrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PanelList, {\n    path: \"/graph\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Alerts, {\n    path: \"/alerts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Config, {\n    path: \"/config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Flags, {\n    path: \"/flags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Rules, {\n    path: \"/rules\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ServiceDiscovery, {\n    path: \"/service-discovery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Status, {\n    path: \"/status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TSDBStatus, {\n    path: \"/tsdb-status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Targets, {\n    path: \"/targets\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.tsx"],"names":["React","Navigation","Container","Router","Redirect","Alerts","Config","Flags","Rules","ServiceDiscovery","Status","Targets","TSDBStatus","PanelList","PathPrefixContext","App","consolesLink","basePath","window","location","pathname","paths","endsWith","slice","length","i","paddingTop"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport Navigation from './Navbar';\nimport { Container } from 'reactstrap';\n\nimport './App.css';\nimport { Router, Redirect } from '@reach/router';\nimport { Alerts, Config, Flags, Rules, ServiceDiscovery, Status, Targets, TSDBStatus, PanelList } from './pages';\nimport { PathPrefixContext } from './contexts/PathPrefixContext';\n\ninterface AppProps {\n  consolesLink: string | null;\n}\n\nconst App: FC<AppProps> = ({ consolesLink }) => {\n  // This dynamically/generically determines the pathPrefix by stripping the first known\n  // endpoint suffix from the window location path. It works out of the box for both direct\n  // hosting and reverse proxy deployments with no additional configurations required.\n  let basePath = window.location.pathname;\n  const paths = [\n    '/graph',\n    '/alerts',\n    '/status',\n    '/tsdb-status',\n    '/flags',\n    '/config',\n    '/rules',\n    '/targets',\n    '/service-discovery',\n  ];\n  if (basePath.endsWith('/')) {\n    basePath = basePath.slice(0, -1);\n  }\n  if (basePath.length > 1) {\n    for (let i = 0; i < paths.length; i++) {\n      if (basePath.endsWith(paths[i])) {\n        basePath = basePath.slice(0, basePath.length - paths[i].length);\n        break;\n      }\n    }\n  }\n\n  return (\n    <PathPrefixContext.Provider value={basePath}>\n      <Navigation consolesLink={consolesLink} />\n      <Container fluid style={{ paddingTop: 70 }}>\n        <Router basepath={`${basePath}`}>\n          <Redirect from=\"/\" to={`graph`} noThrow />\n          {/*\n              NOTE: Any route added here needs to also be added to the list of\n              React-handled router paths (\"reactRouterPaths\") in /web/web.go.\n            */}\n          <PanelList path=\"/graph\" />\n          <Alerts path=\"/alerts\" />\n          <Config path=\"/config\" />\n          <Flags path=\"/flags\" />\n          <Rules path=\"/rules\" />\n          <ServiceDiscovery path=\"/service-discovery\" />\n          <Status path=\"/status\" />\n          <TSDBStatus path=\"/tsdb-status\" />\n          <Targets path=\"/targets\" />\n        </Router>\n      </Container>\n    </PathPrefixContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}