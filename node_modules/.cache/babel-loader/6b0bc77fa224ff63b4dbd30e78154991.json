{"ast":null,"code":"import _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/pages/status/Status.tsx\";\n\nimport React, { Fragment } from 'react';\nimport { Table } from 'reactstrap';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport { useFetch } from '../../hooks/useFetch';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\nexport var statusConfig = {\n  startTime: {\n    title: 'Start time',\n    customizeValue: function customizeValue(v) {\n      return new Date(v).toUTCString();\n    }\n  },\n  CWD: {\n    title: 'Working directory'\n  },\n  reloadConfigSuccess: {\n    title: 'Configuration reload',\n    customizeValue: function customizeValue(v) {\n      return v ? 'Successful' : 'Unsuccessful';\n    }\n  },\n  lastConfigTime: {\n    title: 'Last successful configuration reload'\n  },\n  corruptionCount: {\n    title: 'WAL corruptions'\n  },\n  goroutineCount: {\n    title: 'Goroutines'\n  },\n  storageRetention: {\n    title: 'Storage retention'\n  },\n  activeAlertmanagers: {\n    customRow: true,\n    customizeValue: function customizeValue(alertMgrs, key) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"Endpoint\")), alertMgrs.map(function (_ref) {\n        var url = _ref.url;\n\n        var _URL = new URL(url),\n            origin = _URL.origin,\n            pathname = _URL.pathname;\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: url,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }\n        }, origin), pathname));\n      }));\n    }\n  },\n  droppedAlertmanagers: {\n    skip: true\n  }\n};\nexport var StatusContent = function StatusContent(_ref2) {\n  var data = _ref2.data,\n      title = _ref2.title;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(Table, {\n    className: \"h-auto\",\n    size: \"sm\",\n    bordered: true,\n    striped: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Object.entries(data).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        k = _ref4[0],\n        v = _ref4[1];\n\n    var _ref5 = statusConfig[k] || {},\n        _ref5$title = _ref5.title,\n        title = _ref5$title === void 0 ? k : _ref5$title,\n        _ref5$customizeValue = _ref5.customizeValue,\n        customizeValue = _ref5$customizeValue === void 0 ? function (val) {\n      return val;\n    } : _ref5$customizeValue,\n        customRow = _ref5.customRow,\n        skip = _ref5.skip;\n\n    if (skip) {\n      return null;\n    }\n\n    if (customRow) {\n      return customizeValue(v, k);\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: k,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"capitalize-title\",\n      style: {\n        width: '35%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-break\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, customizeValue(v, title)));\n  }))));\n};\nvar StatusWithStatusIndicator = withStatusIndicator(StatusContent);\nStatusContent.displayName = 'Status';\n\nvar Status = function Status() {\n  var pathPrefix = usePathPrefix();\n  var path = \"\".concat(pathPrefix, \"/\").concat(API_PATH);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, [{\n    fetchResult: useFetch(\"\".concat(path, \"/status/runtimeinfo\")),\n    title: 'Runtime Information'\n  }, {\n    fetchResult: useFetch(\"\".concat(path, \"/status/buildinfo\")),\n    title: 'Build Information'\n  }, {\n    fetchResult: useFetch(\"\".concat(path, \"/alertmanagers\")),\n    title: 'Alertmanagers'\n  }].map(function (_ref6) {\n    var fetchResult = _ref6.fetchResult,\n        title = _ref6.title;\n    var response = fetchResult.response,\n        isLoading = fetchResult.isLoading,\n        error = fetchResult.error;\n    return /*#__PURE__*/React.createElement(StatusWithStatusIndicator, {\n      key: title,\n      data: response.data,\n      title: title,\n      isLoading: isLoading,\n      error: error,\n      componentTitle: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default Status;","map":{"version":3,"sources":["/app/src/pages/status/Status.tsx"],"names":["React","Fragment","Table","withStatusIndicator","useFetch","usePathPrefix","API_PATH","statusConfig","startTime","title","customizeValue","v","Date","toUTCString","CWD","reloadConfigSuccess","lastConfigTime","corruptionCount","goroutineCount","storageRetention","activeAlertmanagers","customRow","alertMgrs","key","map","url","URL","origin","pathname","droppedAlertmanagers","skip","StatusContent","data","Object","entries","k","val","width","StatusWithStatusIndicator","displayName","Status","pathPrefix","path","fetchResult","response","isLoading","error"],"mappings":"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","sourcesContent":["import React, { Fragment, FC } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Table } from 'reactstrap';\nimport { withStatusIndicator } from '../../components/withStatusIndicator';\nimport { useFetch } from '../../hooks/useFetch';\nimport { usePathPrefix } from '../../contexts/PathPrefixContext';\nimport { API_PATH } from '../../constants/constants';\n\ninterface StatusPageProps {\n  data: Record<string, string>;\n  title: string;\n}\n\nexport const statusConfig: Record<\n  string,\n  { title?: string; customizeValue?: (v: any, key: string) => any; customRow?: boolean; skip?: boolean }\n> = {\n  startTime: { title: 'Start time', customizeValue: (v: string) => new Date(v).toUTCString() },\n  CWD: { title: 'Working directory' },\n  reloadConfigSuccess: {\n    title: 'Configuration reload',\n    customizeValue: (v: boolean) => (v ? 'Successful' : 'Unsuccessful'),\n  },\n  lastConfigTime: { title: 'Last successful configuration reload' },\n  corruptionCount: { title: 'WAL corruptions' },\n  goroutineCount: { title: 'Goroutines' },\n  storageRetention: { title: 'Storage retention' },\n  activeAlertmanagers: {\n    customRow: true,\n    customizeValue: (alertMgrs: { url: string }[], key) => {\n      return (\n        <Fragment key={key}>\n          <tr>\n            <th>Endpoint</th>\n          </tr>\n          {alertMgrs.map(({ url }) => {\n            const { origin, pathname } = new URL(url);\n            return (\n              <tr key={url}>\n                <td>\n                  <a href={url}>{origin}</a>\n                  {pathname}\n                </td>\n              </tr>\n            );\n          })}\n        </Fragment>\n      );\n    },\n  },\n  droppedAlertmanagers: { skip: true },\n};\n\nexport const StatusContent: FC<StatusPageProps> = ({ data, title }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      <Table className=\"h-auto\" size=\"sm\" bordered striped>\n        <tbody>\n          {Object.entries(data).map(([k, v]) => {\n            const { title = k, customizeValue = (val: any) => val, customRow, skip } = statusConfig[k] || {};\n            if (skip) {\n              return null;\n            }\n            if (customRow) {\n              return customizeValue(v, k);\n            }\n            return (\n              <tr key={k}>\n                <th className=\"capitalize-title\" style={{ width: '35%' }}>\n                  {title}\n                </th>\n                <td className=\"text-break\">{customizeValue(v, title)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\nconst StatusWithStatusIndicator = withStatusIndicator(StatusContent);\n\nStatusContent.displayName = 'Status';\n\nconst Status: FC<RouteComponentProps> = () => {\n  const pathPrefix = usePathPrefix();\n  const path = `${pathPrefix}/${API_PATH}`;\n\n  return (\n    <>\n      {[\n        { fetchResult: useFetch<Record<string, string>>(`${path}/status/runtimeinfo`), title: 'Runtime Information' },\n        { fetchResult: useFetch<Record<string, string>>(`${path}/status/buildinfo`), title: 'Build Information' },\n        { fetchResult: useFetch<Record<string, string>>(`${path}/alertmanagers`), title: 'Alertmanagers' },\n      ].map(({ fetchResult, title }) => {\n        const { response, isLoading, error } = fetchResult;\n        return (\n          <StatusWithStatusIndicator\n            key={title}\n            data={response.data}\n            title={title}\n            isLoading={isLoading}\n            error={error}\n            componentTitle={title}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Status;\n"]},"metadata":{},"sourceType":"module"}