{"ast":null,"code":"import _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/pages/serviceDiscovery/LabelsTable.tsx\";\n\nimport React, { useState } from 'react';\nimport { Badge, Table } from 'reactstrap';\nimport { ToggleMoreLess } from '../../components/ToggleMoreLess';\n\nvar formatLabels = function formatLabels(labels) {\n  return Object.entries(labels).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      color: \"primary\",\n      className: \"mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"\".concat(key, \"=\\\"\").concat(value, \"\\\"\")));\n  });\n};\n\nexport var LabelsTable = function LabelsTable(_ref3) {\n  var value = _ref3.value,\n      name = _ref3.name;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMore = _useState2[0],\n      setShowMore = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleMoreLess, {\n    event: function event() {\n      setShowMore(!showMore);\n    },\n    showMore: showMore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"target-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, name))), showMore ? /*#__PURE__*/React.createElement(Table, {\n    size: \"sm\",\n    bordered: true,\n    hover: true,\n    striped: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Discovered Labels\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Target Labels\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, value.map(function (_, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, formatLabels(value[i].discoveredLabels)), value[i].isDropped ? /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Dropped\") : /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, formatLabels(value[i].labels)));\n  }))) : null);\n};","map":{"version":3,"sources":["/app/src/pages/serviceDiscovery/LabelsTable.tsx"],"names":["React","useState","Badge","Table","ToggleMoreLess","formatLabels","labels","Object","entries","map","key","value","LabelsTable","name","showMore","setShowMore","_","i","discoveredLabels","isDropped","fontWeight"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AAEA,SAASC,cAAT,QAA+B,iCAA/B;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAA6C;AAChE,SAAOC,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,GAAvB,CAA2B,gBAAkB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AAClD,wBACE;AAAK,MAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,SAAb;AAAuB,MAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMA,GADN,gBACcC,KADd,QADF,CADF;AAOD,GARM,CAAP;AASD,CAVD;;AAYA,OAAO,IAAMC,WAAiD,GAAG,SAApDA,WAAoD,QAAqB;AAAA,MAAlBD,KAAkB,SAAlBA,KAAkB;AAAA,MAAXE,IAAW,SAAXA,IAAW;;AAAA,kBACpDZ,QAAQ,CAAC,KAAD,CAD4C;AAAA;AAAA,MAC7Ea,QAD6E;AAAA,MACnEC,WADmE;;AAGpF,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE,iBAAY;AACjBA,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,KAHH;AAIE,IAAA,QAAQ,EAAEA,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,IAA/B,CANF,CADF,CADF,EAWGC,QAAQ,gBACP,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,QAAQ,MAAzB;AAA0B,IAAA,KAAK,MAA/B;AAAgC,IAAA,OAAO,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACF,GAAN,CAAU,UAACO,CAAD,EAAIC,CAAJ,EAAU;AACnB,wBACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,YAAY,CAACM,KAAK,CAACM,CAAD,CAAL,CAASC,gBAAV,CAAjB,CADF,EAEGP,KAAK,CAACM,CAAD,CAAL,CAASE,SAAT,gBACC;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,YAAY,CAACM,KAAK,CAACM,CAAD,CAAL,CAASX,MAAV,CAAjB,CALJ,CADF;AAUD,GAXA,CADH,CAPF,CADO,GAuBL,IAlCN,CADF;AAsCD,CAzCM","sourcesContent":["import React, { FC, useState } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Badge, Table } from 'reactstrap';\nimport { TargetLabels } from './Services';\nimport { ToggleMoreLess } from '../../components/ToggleMoreLess';\n\ninterface LabelProps {\n  value: TargetLabels[];\n  name: string;\n}\n\nconst formatLabels = (labels: Record<string, string> | string) => {\n  return Object.entries(labels).map(([key, value]) => {\n    return (\n      <div key={key}>\n        <Badge color=\"primary\" className=\"mr-1\">\n          {`${key}=\"${value}\"`}\n        </Badge>\n      </div>\n    );\n  });\n};\n\nexport const LabelsTable: FC<RouteComponentProps & LabelProps> = ({ value, name }) => {\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <>\n      <div>\n        <ToggleMoreLess\n          event={(): void => {\n            setShowMore(!showMore);\n          }}\n          showMore={showMore}\n        >\n          <span className=\"target-head\">{name}</span>\n        </ToggleMoreLess>\n      </div>\n      {showMore ? (\n        <Table size=\"sm\" bordered hover striped>\n          <thead>\n            <tr>\n              <th>Discovered Labels</th>\n              <th>Target Labels</th>\n            </tr>\n          </thead>\n          <tbody>\n            {value.map((_, i) => {\n              return (\n                <tr key={i}>\n                  <td>{formatLabels(value[i].discoveredLabels)}</td>\n                  {value[i].isDropped ? (\n                    <td style={{ fontWeight: 'bold' }}>Dropped</td>\n                  ) : (\n                    <td>{formatLabels(value[i].labels)}</td>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}