{"ast":null,"code":"import _objectSpread from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/pages/alerts/AlertContents.tsx\";\n\nimport React, { Fragment } from 'react';\nimport { Badge } from 'reactstrap';\nimport CollapsibleAlertPanel from './CollapsibleAlertPanel';\nimport Checkbox from '../../components/Checkbox';\nimport { isPresent } from '../../utils';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nvar stateColorTuples = [['inactive', 'success'], ['pending', 'warning'], ['firing', 'danger']];\n\nvar AlertsContent = function AlertsContent(_ref) {\n  var _ref$groups = _ref.groups,\n      groups = _ref$groups === void 0 ? [] : _ref$groups,\n      statsCount = _ref.statsCount;\n\n  var _useLocalStorage = useLocalStorage('alerts-status-filter', {\n    firing: true,\n    pending: true,\n    inactive: true\n  }),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      filter = _useLocalStorage2[0],\n      setFilter = _useLocalStorage2[1];\n\n  var _useLocalStorage3 = useLocalStorage('alerts-annotations-status', {\n    checked: false\n  }),\n      _useLocalStorage4 = _slicedToArray(_useLocalStorage3, 2),\n      showAnnotations = _useLocalStorage4[0],\n      setShowAnnotations = _useLocalStorage4[1];\n\n  var toggleFilter = function toggleFilter(ruleState) {\n    return function () {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        [ruleState]: !filter[ruleState]\n      }));\n    };\n  };\n\n  var toggleAnnotations = function toggleAnnotations() {\n    setShowAnnotations({\n      checked: !showAnnotations.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex togglers-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, stateColorTuples.map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        state = _ref3[0],\n        color = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      key: state,\n      wrapperStyles: {\n        marginRight: 10\n      },\n      checked: filter[state],\n      id: \"\".concat(state, \"-toggler\"),\n      onClick: toggleFilter(state),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      color: color,\n      className: \"text-capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, state, \" (\", statsCount[state], \")\"));\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    wrapperStyles: {\n      marginLeft: 'auto'\n    },\n    checked: showAnnotations.checked,\n    id: \"show-annotations-toggler\",\n    onClick: function onClick() {\n      return toggleAnnotations();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '0.9rem',\n      lineHeight: 1.9\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Show annotations\"))), groups.map(function (group, i) {\n    var hasFilterOn = group.rules.some(function (rule) {\n      return filter[rule.state];\n    });\n    return hasFilterOn ? /*#__PURE__*/React.createElement(Fragment, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GroupInfo, {\n      rules: group.rules,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, group.file, \" > \", group.name), group.rules.map(function (rule, j) {\n      return filter[rule.state] && /*#__PURE__*/React.createElement(CollapsibleAlertPanel, {\n        key: rule.name + j,\n        showAnnotations: showAnnotations.checked,\n        rule: rule,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      });\n    })) : null;\n  }));\n};\n\nexport var GroupInfo = function GroupInfo(_ref4) {\n  var rules = _ref4.rules,\n      children = _ref4.children;\n  var statesCounter = rules.reduce(function (acc, r) {\n    return _objectSpread(_objectSpread({}, acc), {}, {\n      [r.state]: acc[r.state] + r.alerts.length\n    });\n  }, {\n    firing: 0,\n    pending: 0\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group-info border rounded-sm\",\n    style: {\n      lineHeight: 1.1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badges-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, isPresent(statesCounter.inactive) && /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 47\n    }\n  }, \"inactive\"), statesCounter.pending > 0 && /*#__PURE__*/React.createElement(Badge, {\n    color: \"warning\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 39\n    }\n  }, \"pending (\", statesCounter.pending, \")\"), statesCounter.firing > 0 && /*#__PURE__*/React.createElement(Badge, {\n    color: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 38\n    }\n  }, \"firing (\", statesCounter.firing, \")\")));\n};\nAlertsContent.displayName = 'Alerts';\nexport default AlertsContent;","map":{"version":3,"sources":["/app/src/pages/alerts/AlertContents.tsx"],"names":["React","Fragment","Badge","CollapsibleAlertPanel","Checkbox","isPresent","useLocalStorage","stateColorTuples","AlertsContent","groups","statsCount","firing","pending","inactive","filter","setFilter","checked","showAnnotations","setShowAnnotations","toggleFilter","ruleState","toggleAnnotations","map","state","color","marginRight","marginLeft","fontSize","lineHeight","group","i","hasFilterOn","rules","some","rule","file","name","j","GroupInfo","children","statesCounter","reduce","acc","r","alerts","length","displayName"],"mappings":"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","sourcesContent":["import React, { FC, Fragment } from 'react';\nimport { Badge } from 'reactstrap';\nimport CollapsibleAlertPanel from './CollapsibleAlertPanel';\nimport Checkbox from '../../components/Checkbox';\nimport { isPresent } from '../../utils';\nimport { Rule } from '../../types/types';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\n\nexport type RuleState = keyof RuleStatus<any>;\n\nexport interface RuleStatus<T> {\n  firing: T;\n  pending: T;\n  inactive: T;\n}\n\nexport interface AlertsProps {\n  groups?: RuleGroup[];\n  statsCount: RuleStatus<number>;\n}\n\nexport interface Alert {\n  labels: Record<string, string>;\n  state: RuleState;\n  value: string;\n  annotations: Record<string, string>;\n  activeAt: string;\n}\n\ninterface RuleGroup {\n  name: string;\n  file: string;\n  rules: Rule[];\n  interval: number;\n}\n\nconst stateColorTuples: Array<[RuleState, 'success' | 'warning' | 'danger']> = [\n  ['inactive', 'success'],\n  ['pending', 'warning'],\n  ['firing', 'danger'],\n];\n\nconst AlertsContent: FC<AlertsProps> = ({ groups = [], statsCount }) => {\n  const [filter, setFilter] = useLocalStorage('alerts-status-filter', {\n    firing: true,\n    pending: true,\n    inactive: true,\n  });\n  const [showAnnotations, setShowAnnotations] = useLocalStorage('alerts-annotations-status', { checked: false });\n\n  const toggleFilter = (ruleState: RuleState) => () => {\n    setFilter({\n      ...filter,\n      [ruleState]: !filter[ruleState],\n    });\n  };\n\n  const toggleAnnotations = () => {\n    setShowAnnotations({ checked: !showAnnotations.checked });\n  };\n\n  return (\n    <>\n      <div className=\"d-flex togglers-wrapper\">\n        {stateColorTuples.map(([state, color]) => {\n          return (\n            <Checkbox\n              key={state}\n              wrapperStyles={{ marginRight: 10 }}\n              checked={filter[state]}\n              id={`${state}-toggler`}\n              onClick={toggleFilter(state)}\n            >\n              <Badge color={color} className=\"text-capitalize\">\n                {state} ({statsCount[state]})\n              </Badge>\n            </Checkbox>\n          );\n        })}\n        <Checkbox\n          wrapperStyles={{ marginLeft: 'auto' }}\n          checked={showAnnotations.checked}\n          id=\"show-annotations-toggler\"\n          onClick={() => toggleAnnotations()}\n        >\n          <span style={{ fontSize: '0.9rem', lineHeight: 1.9 }}>Show annotations</span>\n        </Checkbox>\n      </div>\n      {groups.map((group, i) => {\n        const hasFilterOn = group.rules.some(rule => filter[rule.state]);\n        return hasFilterOn ? (\n          <Fragment key={i}>\n            <GroupInfo rules={group.rules}>\n              {group.file} &gt; {group.name}\n            </GroupInfo>\n            {group.rules.map((rule, j) => {\n              return (\n                filter[rule.state] && (\n                  <CollapsibleAlertPanel key={rule.name + j} showAnnotations={showAnnotations.checked} rule={rule} />\n                )\n              );\n            })}\n          </Fragment>\n        ) : null;\n      })}\n    </>\n  );\n};\n\ninterface GroupInfoProps {\n  rules: Rule[];\n}\n\nexport const GroupInfo: FC<GroupInfoProps> = ({ rules, children }) => {\n  const statesCounter = rules.reduce<any>(\n    (acc, r) => {\n      return {\n        ...acc,\n        [r.state]: acc[r.state] + r.alerts.length,\n      };\n    },\n    {\n      firing: 0,\n      pending: 0,\n    }\n  );\n\n  return (\n    <div className=\"group-info border rounded-sm\" style={{ lineHeight: 1.1 }}>\n      {children}\n      <div className=\"badges-wrapper\">\n        {isPresent(statesCounter.inactive) && <Badge color=\"success\">inactive</Badge>}\n        {statesCounter.pending > 0 && <Badge color=\"warning\">pending ({statesCounter.pending})</Badge>}\n        {statesCounter.firing > 0 && <Badge color=\"danger\">firing ({statesCounter.firing})</Badge>}\n      </div>\n    </div>\n  );\n};\n\nAlertsContent.displayName = 'Alerts';\n\nexport default AlertsContent;\n"]},"metadata":{},"sourceType":"module"}